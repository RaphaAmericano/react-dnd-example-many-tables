{"version":3,"sources":["App.js","index.js"],"names":["onDragEnd","result","columns","setColumns","destination","source","droppableId","_objectSpread2","sourceColumn","destColumn","sourceItems","Object","toConsumableArray","items","destItems","_sourceItems$splice","splice","index","removed","slicedToArray","objectSpread2","defineProperty","column","copiedItems","_copiedItems$splice","App","_initialColumns","_useState","useState","_useState2","setItems","initialColumns","uuid","name","_useState3","_useState4","useEffect","axios","then","_ref","data","map","item","id","content","prev","newState","keys","find","key","catch","console","warn","log","react_default","a","createElement","style","display","justifyContent","height","onClick","react_beautiful_dnd_esm","entries","_ref2","_ref3","columnId","flexDirection","alignItems","margin","provided","snapshot","assign","droppableProps","ref","innerRef","background","isDraggingOver","padding","width","minHeight","draggableId","draggableProps","dragHandleProps","userSelect","backgroundColor","isDragging","color","placeholder","rootElement","document","getElementById","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.2de87de1.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport axios from 'axios';\nimport uuid from \"uuid/v4\";\n\n// const itemsFromBackend = [\n//   { id: uuid(), content: \"First task\" },\n//   { id: uuid(), content: \"Second task\" },\n//   { id: uuid(), content: \"Third task\" },\n//   { id: uuid(), content: \"Fourth task\" },\n//   { id: uuid(), content: \"Fifth task\" }\n// ];\n\n// const columnsFromBackend = {\n//   [uuid()]: {\n//     name: \"Requested\",\n//     items: itemsFromBackend\n//   },\n//   [uuid()]: {\n//     name: \"To do\",\n//     items: []\n//   },\n//   [uuid()]: {\n//     name: \"In Progress\",\n//     items: []\n//   },\n//   [uuid()]: {\n//     name: \"Done\",\n//     items: []\n//   }\n// };\n\nconst onDragEnd = (result, columns, setColumns) => {\n  if (!result.destination) return;\n  const { source, destination } = result;\n\n  if (source.droppableId !== destination.droppableId) {\n    const sourceColumn = columns[source.droppableId];\n    const destColumn = columns[destination.droppableId];\n    const sourceItems = [...sourceColumn.items];\n    const destItems = [...destColumn.items];\n    const [removed] = sourceItems.splice(source.index, 1);\n    destItems.splice(destination.index, 0, removed);\n    setColumns({\n      ...columns,\n      [source.droppableId]: {\n        ...sourceColumn,\n        items: sourceItems\n      },\n      [destination.droppableId]: {\n        ...destColumn,\n        items: destItems\n      }\n    });\n  } else {\n    const column = columns[source.droppableId];\n    const copiedItems = [...column.items];\n    const [removed] = copiedItems.splice(source.index, 1);\n    copiedItems.splice(destination.index, 0, removed);\n    setColumns({\n      ...columns,\n      [source.droppableId]: {\n        ...column,\n        items: copiedItems\n      }\n    });\n  }\n};\n\nfunction App() {\n  const [items, setItems] = useState([])\n\n  const initialColumns = {\n    [uuid()]: {\n      name: \"Requested\",\n      items: items\n    },\n    [uuid()]: {\n      name: \"To do\",\n      items: []\n    },\n    [uuid()]: {\n      name: \"In Progress\",\n      items: []\n    },\n    [uuid()]: {\n      name: \"Done\",\n      items: []\n    }\n  };\n\n  const [columns, setColumns] = useState(initialColumns);\n\n  const findKey = (columns) => {\n    return Object.keys(columns).find((key) => columns[key].name === \"Requested\"); \n  }\n  \n  const save = () => {\n    console.log(columns)\n  }\n\n  useEffect(() => {\n    axios('https://crud-sebrae.herokuapp.com/cadastros')\n      .then(({ data }) => {\n        const items = data.map((item) => ({id: uuid(), content: item.name}))\n        setItems(items)\n        setColumns(prev => {\n          const newState = {...prev}\n          newState[findKey(prev)].items = items;\n          return newState;\n        })\n      })\n      .catch(console.warn)\n  },[])\n\n  useEffect(() => {\n    console.log(columns)\n  },[columns])\n\n  return (\n    <div style={{ display: \"flex\", justifyContent: \"center\", height: \"100%\" }}>\n      <button onClick={save}>Salvar</button>\n      <DragDropContext\n        onDragEnd={result => onDragEnd(result, columns, setColumns)}\n      >\n        {Object.entries(columns).map(([columnId, column], index) => {\n          return (\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"center\"\n              }}\n              key={columnId}\n            >\n              <h2>{column.name}</h2>\n              <div style={{ margin: 8 }}>\n                <Droppable droppableId={columnId} key={columnId}>\n                  {(provided, snapshot) => {\n                    return (\n                      <div\n                        {...provided.droppableProps}\n                        ref={provided.innerRef}\n                        style={{\n                          background: snapshot.isDraggingOver\n                            ? \"lightblue\"\n                            : \"lightgrey\",\n                          padding: 4,\n                          width: 250,\n                          minHeight: 500\n                        }}\n                      >\n                        {column.items.map((item, index) => {\n                          return (\n                            <Draggable\n                              key={item.id}\n                              draggableId={item.id}\n                              index={index}\n                            >\n                              {(provided, snapshot) => {\n                                return (\n                                  <div\n                                    ref={provided.innerRef}\n                                    {...provided.draggableProps}\n                                    {...provided.dragHandleProps}\n                                    style={{\n                                      userSelect: \"none\",\n                                      padding: 16,\n                                      margin: \"0 0 8px 0\",\n                                      minHeight: \"50px\",\n                                      backgroundColor: snapshot.isDragging\n                                        ? \"#263B4A\"\n                                        : \"#456C86\",\n                                      color: \"white\",\n                                      ...provided.draggableProps.style\n                                    }}\n                                  >\n                                    {item.content}\n                                  </div>\n                                );\n                              }}\n                            </Draggable>\n                          );\n                        })}\n                        {provided.placeholder}\n                      </div>\n                    );\n                  }}\n                </Droppable>\n              </div>\n            </div>\n          );\n        })}\n      </DragDropContext>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}